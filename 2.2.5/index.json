{
  "api/CareBoo.Serially.Editor.EnumerableExtensions.html": {
    "href": "api/CareBoo.Serially.Editor.EnumerableExtensions.html",
    "title": "Class EnumerableExtensions | Serially",
    "keywords": "Class EnumerableExtensions Inheritance Object EnumerableExtensions Namespace : CareBoo.Serially.Editor Assembly : cs.temp.dll.dll Syntax public static class EnumerableExtensions Methods ElementAtOrDefault(IEnumerable, Int32) Declaration public static object ElementAtOrDefault(this IEnumerable sequence, int index) Parameters Type Name Description IEnumerable sequence Int32 index Returns Type Description Object SkipLast<TSource>(IEnumerable<TSource>, Int32) Declaration public static IEnumerable<TSource> SkipLast<TSource>(this IEnumerable<TSource> source, int count) Parameters Type Name Description IEnumerable <TSource> source Int32 count Returns Type Description IEnumerable <TSource> Type Parameters Name Description TSource"
  },
  "api/CareBoo.Serially.Editor.GuiEvent.html": {
    "href": "api/CareBoo.Serially.Editor.GuiEvent.html",
    "title": "Struct GuiEvent | Serially",
    "keywords": "Struct GuiEvent Namespace : CareBoo.Serially.Editor Assembly : cs.temp.dll.dll Syntax public struct GuiEvent Constructors GuiEvent(EventType, Vector2, Int32, Int32) Declaration public GuiEvent(EventType type, Vector2 mousePosition, int clickCount, int button) Parameters Type Name Description EventType type Vector2 mousePosition Int32 clickCount Int32 button Properties Button Declaration public int Button { get; } Property Value Type Description Int32 ClickCount Declaration public int ClickCount { get; } Property Value Type Description Int32 FromCurrentUnityEvent Declaration public static GuiEvent FromCurrentUnityEvent { get; } Property Value Type Description GuiEvent MousePosition Declaration public Vector2 MousePosition { get; } Property Value Type Description Vector2 Type Declaration public EventType Type { get; set; } Property Value Type Description EventType"
  },
  "api/CareBoo.Serially.Editor.html": {
    "href": "api/CareBoo.Serially.Editor.html",
    "title": "Namespace CareBoo.Serially.Editor | Serially",
    "keywords": "Namespace CareBoo.Serially.Editor Classes EnumerableExtensions SerializableTypeDrawer SerializableTypeMeta SerializedPropertyExtensions ShowSerializeReferenceDrawer StringExtensions SystemObjectExtensions TypeExtensions TypeField.Styles TypePickerWindow Structs GuiEvent ShowSerializeReferenceDrawer.Context TypeField"
  },
  "api/CareBoo.Serially.Editor.SerializableTypeDrawer.html": {
    "href": "api/CareBoo.Serially.Editor.SerializableTypeDrawer.html",
    "title": "Class SerializableTypeDrawer | Serially",
    "keywords": "Class SerializableTypeDrawer Inheritance Object SerializableTypeDrawer Namespace : CareBoo.Serially.Editor Assembly : cs.temp.dll.dll Syntax public class SerializableTypeDrawer : PropertyDrawer Methods GetDerivedTypes(Type) Declaration public static IEnumerable<Type> GetDerivedTypes(Type baseType) Parameters Type Name Description Type baseType Returns Type Description IEnumerable < Type > GetFilteredTypes(SerializedProperty, PropertyAttribute) Declaration public static IEnumerable<Type> GetFilteredTypes(SerializedProperty property, PropertyAttribute propertyAttribute) Parameters Type Name Description SerializedProperty property PropertyAttribute propertyAttribute Returns Type Description IEnumerable < Type > GetTypeFilter(SerializedProperty, PropertyAttribute) Declaration public static (Type baseType, Func<IEnumerable<Type>, IEnumerable<Type>> filter) GetTypeFilter(SerializedProperty property, PropertyAttribute propertyAttribute) Parameters Type Name Description SerializedProperty property PropertyAttribute propertyAttribute Returns Type Description ValueTuple < Type , Func < IEnumerable < Type >, IEnumerable < Type >>> IsMissingGuidAttribute(Type) Declaration public static bool IsMissingGuidAttribute(Type type) Parameters Type Name Description Type type Returns Type Description Boolean OnGUI(Rect, SerializedProperty, GUIContent) Declaration public override void OnGUI(Rect position, SerializedProperty property, GUIContent label) Parameters Type Name Description Rect position SerializedProperty property GUIContent label SetTypeValue(SerializedProperty) Declaration public static Action<Type> SetTypeValue(SerializedProperty property) Parameters Type Name Description SerializedProperty property Returns Type Description Action < Type > Validate(String, GUIContent) Declaration public static Type Validate(string typeId, GUIContent label) Parameters Type Name Description String typeId GUIContent label Returns Type Description Type"
  },
  "api/CareBoo.Serially.Editor.SerializableTypeMeta.html": {
    "href": "api/CareBoo.Serially.Editor.SerializableTypeMeta.html",
    "title": "Class SerializableTypeMeta | Serially",
    "keywords": "Class SerializableTypeMeta Inheritance Object SerializableType SerializableTypeMeta Inherited Members SerializableType.typeId SerializableType.TypeNotFoundError SerializableType.Type SerializableType.TryGetType(String, Type) SerializableType.ToSerializedType(Type) Namespace : CareBoo.Serially.Editor Assembly : cs.temp.dll.dll Syntax public class SerializableTypeMeta : SerializableType Fields TypeIdProperty Declaration public static string TypeIdProperty Field Value Type Description String"
  },
  "api/CareBoo.Serially.Editor.SerializedPropertyExtensions.html": {
    "href": "api/CareBoo.Serially.Editor.SerializedPropertyExtensions.html",
    "title": "Class SerializedPropertyExtensions | Serially",
    "keywords": "Class SerializedPropertyExtensions Inheritance Object SerializedPropertyExtensions Namespace : CareBoo.Serially.Editor Assembly : cs.temp.dll.dll Syntax public static class SerializedPropertyExtensions Methods GetManagedReferenceFieldType(SerializedProperty) Declaration public static Type GetManagedReferenceFieldType(this SerializedProperty property) Parameters Type Name Description SerializedProperty property Returns Type Description Type GetManagedReferenceValueType(SerializedProperty) Declaration public static Type GetManagedReferenceValueType(this SerializedProperty property) Parameters Type Name Description SerializedProperty property Returns Type Description Type GetSelectableManagedReferenceValueTypes(SerializedProperty) Declaration public static Type[] GetSelectableManagedReferenceValueTypes(this SerializedProperty property) Parameters Type Name Description SerializedProperty property Returns Type Description Type [] GetValue(SerializedProperty, Func<IEnumerable<String>, IEnumerable<String>>) Declaration public static object GetValue(this SerializedProperty property, Func<IEnumerable<string>, IEnumerable<string>> pathModifier = null) Parameters Type Name Description SerializedProperty property Func < IEnumerable < String >, IEnumerable < String >> pathModifier Returns Type Description Object SetManagedReferenceValueToNew(SerializedProperty, Type) Declaration public static void SetManagedReferenceValueToNew(this SerializedProperty property, Type type) Parameters Type Name Description SerializedProperty property Type type"
  },
  "api/CareBoo.Serially.Editor.ShowSerializeReferenceDrawer.Context.html": {
    "href": "api/CareBoo.Serially.Editor.ShowSerializeReferenceDrawer.Context.html",
    "title": "Struct ShowSerializeReferenceDrawer.Context | Serially",
    "keywords": "Struct ShowSerializeReferenceDrawer.Context Namespace : CareBoo.Serially.Editor Assembly : cs.temp.dll.dll Syntax public struct Context Constructors Context(SerializedProperty) Declaration public Context(SerializedProperty property) Parameters Type Name Description SerializedProperty property Properties FieldType Declaration public Type FieldType { get; } Property Value Type Description Type Property Declaration public SerializedProperty Property { get; } Property Value Type Description SerializedProperty Methods Copy() Declaration public void Copy() CreateMenu() Declaration public GenericMenu CreateMenu() Returns Type Description GenericMenu Paste() Declaration public void Paste()"
  },
  "api/CareBoo.Serially.Editor.ShowSerializeReferenceDrawer.html": {
    "href": "api/CareBoo.Serially.Editor.ShowSerializeReferenceDrawer.html",
    "title": "Class ShowSerializeReferenceDrawer | Serially",
    "keywords": "Class ShowSerializeReferenceDrawer Inheritance Object ShowSerializeReferenceDrawer Namespace : CareBoo.Serially.Editor Assembly : cs.temp.dll.dll Syntax public class ShowSerializeReferenceDrawer : PropertyDrawer Fields copiedValue Declaration public static object copiedValue Field Value Type Description Object RightClickButton Declaration public const int RightClickButton = 1 Field Value Type Description Int32 Methods GetPropertyHeight(SerializedProperty, GUIContent) Declaration public override float GetPropertyHeight(SerializedProperty property, GUIContent label) Parameters Type Name Description SerializedProperty property GUIContent label Returns Type Description Single GetSelectableTypes(SerializedProperty, FieldInfo) Declaration public static IEnumerable<Type> GetSelectableTypes(SerializedProperty property, FieldInfo fieldInfo) Parameters Type Name Description SerializedProperty property FieldInfo fieldInfo Returns Type Description IEnumerable < Type > OnGUI(Rect, SerializedProperty, GUIContent) Declaration public override void OnGUI(Rect position, SerializedProperty property, GUIContent label) Parameters Type Name Description Rect position SerializedProperty property GUIContent label OnGUI(Rect, SerializedProperty, GUIContent, GuiEvent, FieldInfo) Declaration public static void OnGUI(Rect position, SerializedProperty property, GUIContent label, GuiEvent currentEvent, FieldInfo fieldInfo) Parameters Type Name Description Rect position SerializedProperty property GUIContent label GuiEvent currentEvent FieldInfo fieldInfo"
  },
  "api/CareBoo.Serially.Editor.StringExtensions.html": {
    "href": "api/CareBoo.Serially.Editor.StringExtensions.html",
    "title": "Class StringExtensions | Serially",
    "keywords": "Class StringExtensions Inheritance Object StringExtensions Namespace : CareBoo.Serially.Editor Assembly : cs.temp.dll.dll Syntax public static class StringExtensions Methods TryGetArrayIndex(String, out Int32) Declaration public static bool TryGetArrayIndex(this string propertyStr, out int index) Parameters Type Name Description String propertyStr Int32 index Returns Type Description Boolean"
  },
  "api/CareBoo.Serially.Editor.SystemObjectExtensions.html": {
    "href": "api/CareBoo.Serially.Editor.SystemObjectExtensions.html",
    "title": "Class SystemObjectExtensions | Serially",
    "keywords": "Class SystemObjectExtensions Inheritance Object SystemObjectExtensions Namespace : CareBoo.Serially.Editor Assembly : cs.temp.dll.dll Syntax public static class SystemObjectExtensions Methods GetFieldInfo(Object, String) Declaration public static FieldInfo GetFieldInfo(this object target, string propertyStr) Parameters Type Name Description Object target String propertyStr Returns Type Description FieldInfo GetFieldValue(Object, String) Declaration public static object GetFieldValue(this object target, string fieldName) Parameters Type Name Description Object target String fieldName Returns Type Description Object GetPropertyInfo(Object, String) Declaration public static PropertyInfo GetPropertyInfo(this object target, string propertyStr) Parameters Type Name Description Object target String propertyStr Returns Type Description PropertyInfo"
  },
  "api/CareBoo.Serially.Editor.TypeExtensions.html": {
    "href": "api/CareBoo.Serially.Editor.TypeExtensions.html",
    "title": "Class TypeExtensions | Serially",
    "keywords": "Class TypeExtensions Inheritance Object TypeExtensions Namespace : CareBoo.Serially.Editor Assembly : cs.temp.dll.dll Syntax public static class TypeExtensions Methods GetCustomAttribute<T>(Type) Declaration public static T GetCustomAttribute<T>(this Type type) where T : Attribute Parameters Type Name Description Type type Returns Type Description T Type Parameters Name Description T GetTypeFromManagedReferenceFullTypename(String, out Type) Declaration public static bool GetTypeFromManagedReferenceFullTypename(string managedReferenceFullTypename, out Type type) Parameters Type Name Description String managedReferenceFullTypename Type type Returns Type Description Boolean IsSerializeReferenceable(Type) Declaration public static bool IsSerializeReferenceable(this Type type) Parameters Type Name Description Type type Returns Type Description Boolean"
  },
  "api/CareBoo.Serially.Editor.TypeField.html": {
    "href": "api/CareBoo.Serially.Editor.TypeField.html",
    "title": "Struct TypeField | Serially",
    "keywords": "Struct TypeField Namespace : CareBoo.Serially.Editor Assembly : cs.temp.dll.dll Syntax public struct TypeField Constructors TypeField(Rect, Type, Lazy<IEnumerable<Type>>, Action<Type>, Nullable<GuiEvent>) Declaration public TypeField(Rect position, Type selectedType, Lazy<IEnumerable<Type>> selectableTypes, Action<Type> onSelectType, GuiEvent? currentGuiEvent = default(GuiEvent? )) Parameters Type Name Description Rect position Type selectedType Lazy < IEnumerable < Type >> selectableTypes Action < Type > onSelectType Nullable < GuiEvent > currentGuiEvent Properties CurrentGuiEvent Declaration public GuiEvent CurrentGuiEvent { get; } Property Value Type Description GuiEvent LabelGuiContent Declaration public GUIContent LabelGuiContent { get; } Property Value Type Description GUIContent OnSelectType Declaration public Action<Type> OnSelectType { get; } Property Value Type Description Action < Type > PickerButtonArea Declaration public Rect PickerButtonArea { get; } Property Value Type Description Rect Position Declaration public Rect Position { get; } Property Value Type Description Rect SelectableTypes Declaration public Lazy<IEnumerable<Type>> SelectableTypes { get; } Property Value Type Description Lazy < IEnumerable < Type >> SelectedType Declaration public Type SelectedType { get; } Property Value Type Description Type SourceInfo Declaration public ProvideSourceInfoAttribute SourceInfo { get; } Property Value Type Description ProvideSourceInfoAttribute Methods DrawGui() Declaration public void DrawGui() DrawLabel() Declaration public void DrawLabel() DrawPickerButton() Declaration public void DrawPickerButton() GetLabelGuiContent(Type) Declaration public static GUIContent GetLabelGuiContent(Type type) Parameters Type Name Description Type type Returns Type Description GUIContent GetLabelImage() Declaration public static Texture GetLabelImage() Returns Type Description Texture GetLabelString(Type) Declaration public static string GetLabelString(Type type) Parameters Type Name Description Type type Returns Type Description String GetPickerButtonArea(Rect) Declaration public static Rect GetPickerButtonArea(Rect position) Parameters Type Name Description Rect position Returns Type Description Rect GetSourceInfo(Type) Declaration public static ProvideSourceInfoAttribute GetSourceInfo(Type type) Parameters Type Name Description Type type Returns Type Description ProvideSourceInfoAttribute HandleCurrentEvent() Declaration public void HandleCurrentEvent() HandleMouseDown() Declaration public void HandleMouseDown() HandlePickerButtonClicked() Declaration public void HandlePickerButtonClicked() HandleTypeLabelClicked() Declaration public MonoScript HandleTypeLabelClicked() Returns Type Description MonoScript"
  },
  "api/CareBoo.Serially.Editor.TypeField.Styles.html": {
    "href": "api/CareBoo.Serially.Editor.TypeField.Styles.html",
    "title": "Class TypeField.Styles | Serially",
    "keywords": "Class TypeField.Styles Inheritance Object TypeField.Styles Namespace : CareBoo.Serially.Editor Assembly : cs.temp.dll.dll Syntax public static class Styles Fields objectField Declaration public static readonly GUIStyle objectField Field Value Type Description GUIStyle pickerButton Declaration public static readonly GUIStyle pickerButton Field Value Type Description GUIStyle"
  },
  "api/CareBoo.Serially.Editor.TypePickerWindow.html": {
    "href": "api/CareBoo.Serially.Editor.TypePickerWindow.html",
    "title": "Class TypePickerWindow | Serially",
    "keywords": "Class TypePickerWindow Inheritance Object TypePickerWindow Namespace : CareBoo.Serially.Editor Assembly : cs.temp.dll.dll Syntax public class TypePickerWindow : EditorWindow Fields ContentContainer Declaration public const string ContentContainer = \"content-container\" Field Value Type Description String ItemAssetPath Declaration public const string ItemAssetPath = \"type_picker_item\" Field Value Type Description String SearchFieldName Declaration public const string SearchFieldName = \"search-field\" Field Value Type Description String TypeIcon Declaration public const string TypeIcon = \"type-icon\" Field Value Type Description String TypeLabelRegex Declaration public static readonly Regex TypeLabelRegex Field Value Type Description Regex TypeListName Declaration public const string TypeListName = \"type-list\" Field Value Type Description String TypeNameLabel Declaration public const string TypeNameLabel = \"type-name\" Field Value Type Description String TypeNamespaceLabel Declaration public const string TypeNamespaceLabel = \"type-namespace\" Field Value Type Description String WindowAssetPath Declaration public const string WindowAssetPath = \"type_picker_window\" Field Value Type Description String Methods BindItem(VisualElement, Int32) Declaration public void BindItem(VisualElement element, int index) Parameters Type Name Description VisualElement element Int32 index InitData(Type, IEnumerable<Type>, Action<Type>) Declaration public void InitData(Type preselected, IEnumerable<Type> types, Action<Type> onSelected) Parameters Type Name Description Type preselected IEnumerable < Type > types Action < Type > onSelected IsInSearch(Type) Declaration public bool IsInSearch(Type type) Parameters Type Name Description Type type Returns Type Description Boolean MakeItem() Declaration public VisualElement MakeItem() Returns Type Description VisualElement OnItemChosen(Object) Declaration public void OnItemChosen(object item) Parameters Type Name Description Object item ShowWindow(Type, IEnumerable<Type>, Action<Type>, String) Declaration public static TypePickerWindow ShowWindow(Type preselected, IEnumerable<Type> types, Action<Type> onSelected, string title = null) Parameters Type Name Description Type preselected IEnumerable < Type > types Action < Type > onSelected String title Returns Type Description TypePickerWindow UpdateTypeSearch(ChangeEvent<String>) Declaration public void UpdateTypeSearch(ChangeEvent<string> stringChangeEvent) Parameters Type Name Description ChangeEvent < String > stringChangeEvent"
  },
  "api/CareBoo.Serially.html": {
    "href": "api/CareBoo.Serially.html",
    "title": "Namespace CareBoo.Serially | Serially",
    "keywords": "Namespace CareBoo.Serially Classes ProvideSourceInfoAttribute SerializableType ShowSerializeReferenceAttribute TypeFilterAttribute"
  },
  "api/CareBoo.Serially.ProvideSourceInfoAttribute.html": {
    "href": "api/CareBoo.Serially.ProvideSourceInfoAttribute.html",
    "title": "Class ProvideSourceInfoAttribute | Serially",
    "keywords": "Class ProvideSourceInfoAttribute Inheritance Object ProvideSourceInfoAttribute Namespace : CareBoo.Serially Assembly : cs.temp.dll.dll Syntax [Conditional(\"UNITY_EDITOR\")] public class ProvideSourceInfoAttribute : Attribute Constructors ProvideSourceInfoAttribute(String, String, Int32) Declaration public ProvideSourceInfoAttribute(string member = \"\", string filePath = \"\", int lineNumber = 0) Parameters Type Name Description String member String filePath Int32 lineNumber Properties AssetPath Declaration public string AssetPath { get; } Property Value Type Description String LineNumber Declaration public int LineNumber { get; } Property Value Type Description Int32 Member Declaration public string Member { get; } Property Value Type Description String"
  },
  "api/CareBoo.Serially.SerializableType.html": {
    "href": "api/CareBoo.Serially.SerializableType.html",
    "title": "Class SerializableType | Serially",
    "keywords": "Class SerializableType Inheritance Object SerializableType SerializableTypeMeta Namespace : CareBoo.Serially Assembly : cs.temp.dll.dll Syntax public class SerializableType : ISerializationCallbackReceiver Constructors SerializableType() Declaration public SerializableType() SerializableType(Type) Declaration public SerializableType(Type type) Parameters Type Name Description Type type Fields typeId Declaration protected string typeId Field Value Type Description String Properties Type Declaration public Type Type { get; set; } Property Value Type Description Type TypeNotFoundError Declaration public string TypeNotFoundError { get; } Property Value Type Description String Methods ToSerializedType(Type) Declaration public static string ToSerializedType(Type type) Parameters Type Name Description Type type Returns Type Description String TryGetType(String, out Type) Declaration public static bool TryGetType(string typeString, out Type type) Parameters Type Name Description String typeString Type type Returns Type Description Boolean"
  },
  "api/CareBoo.Serially.ShowSerializeReferenceAttribute.html": {
    "href": "api/CareBoo.Serially.ShowSerializeReferenceAttribute.html",
    "title": "Class ShowSerializeReferenceAttribute | Serially",
    "keywords": "Class ShowSerializeReferenceAttribute Inheritance Object ShowSerializeReferenceAttribute Namespace : CareBoo.Serially Assembly : cs.temp.dll.dll Syntax [Conditional(\"UNITY_EDITOR\")] public class ShowSerializeReferenceAttribute : PropertyAttribute"
  },
  "api/CareBoo.Serially.TypeFilterAttribute.html": {
    "href": "api/CareBoo.Serially.TypeFilterAttribute.html",
    "title": "Class TypeFilterAttribute | Serially",
    "keywords": "Class TypeFilterAttribute Inheritance Object TypeFilterAttribute Namespace : CareBoo.Serially Assembly : cs.temp.dll.dll Syntax [Conditional(\"UNITY_EDITOR\")] public class TypeFilterAttribute : PropertyAttribute Constructors TypeFilterAttribute(String) Declaration public TypeFilterAttribute(string filterName) Parameters Type Name Description String filterName TypeFilterAttribute(Type) Declaration public TypeFilterAttribute(Type derivedFrom) Parameters Type Name Description Type derivedFrom Properties DerivedFrom Declaration public Type DerivedFrom { get; } Property Value Type Description Type DerivedFromFilter Declaration public Func<IEnumerable<Type>, IEnumerable<Type>> DerivedFromFilter { get; } Property Value Type Description Func < IEnumerable < Type >, IEnumerable < Type >> Filter Declaration public Func<IEnumerable<Type>, IEnumerable<Type>> Filter { get; protected set; } Property Value Type Description Func < IEnumerable < Type >, IEnumerable < Type >> FilterName Declaration public string FilterName { get; } Property Value Type Description String Methods BindFilterDelegate(Object) Declaration public Func<IEnumerable<Type>, IEnumerable<Type>> BindFilterDelegate(object parent) Parameters Type Name Description Object parent Returns Type Description Func < IEnumerable < Type >, IEnumerable < Type >> GetFilter(Object) Declaration public Func<IEnumerable<Type>, IEnumerable<Type>> GetFilter(object parent) Parameters Type Name Description Object parent Returns Type Description Func < IEnumerable < Type >, IEnumerable < Type >>"
  },
  "changelog/CHANGELOG.html": {
    "href": "changelog/CHANGELOG.html",
    "title": "Changelog | Serially",
    "keywords": "Changelog All notable changes to this package will be documented in this file. The format is based on Keep a Changelog and this project adheres to Semantic Versioning . 2.2.5 (2022-04-23) Bug Fixes fix compile err in 2021.1 ( #70 ) ( cf51cc3 ), closes #69 2.2.4 (2022-04-10) Bug Fixes editor: fix getting field value on a property ( 3834970 ) use new API for Unity version 2021+ ( 4623df1 ) 2.2.4-pre.1 (2022-04-10) Bug Fixes editor: fix getting field value on a property ( 3834970 ) use new API for Unity version 2021+ ( 4623df1 ) 2.2.3 (2020-10-23) Bug Fixes 🐛 Fix icons not showing ( b777b78 ) 🐛 Fix null reference if no TypeFilter specified ( a9d1edb ), closes #63 🐛 Fix warning when clicking null serialize reference ( 8fec535 ) 2.2.2 (2020-08-17) Bug Fixes 🐛 typefilter returning null wasn't properly handled ( 43928f9 ), closes #61 2.2.1 (2020-08-16) Bug Fixes 🚑 fixes renamed GuiEvent meta file ( 53f665b ), closes #56 2.2.0 (2020-08-16) Features ✨ add TypeFilterAttribute support ( aafd1a1 ), closes #52 ✨ modify TypeFilterAttribute to use sequences ( 12558d5 ), closes #54 Performance Improvements ⚡ making selectabletypes lazy ( 4e3b2fc ), closes #53 2.2.0-preview.1 (2020-08-16) Features ✨ add TypeFilterAttribute support ( 23f32c6 ), closes #52 ✨ modify TypeFilterAttribute to use sequences ( e491674 ), closes #54 Performance Improvements ⚡ making selectabletypes lazy ( a440a52 ), closes #53 2.1.0-preview.3 (2020-08-16) Features ✨ modify TypeFilterAttribute to use sequences ( 71b0ae5 ), closes #54 2.1.0-preview.2 (2020-08-16) Performance Improvements ⚡ making selectabletypes lazy ( fd4d28a ), closes #53 2.1.0-preview.1 (2020-08-16) Bug Fixes 🎨 fixing background color regardless of editor skin ( a871caf ) 🎨 fixing background color regardless of editor skin ( 87bb2a1 ) 🐛 fixing bug if absolute file path is windows ( 142b729 ) 🐛 fixing bug if absolute file path is windows ( fb1eafc ) Features ✨ copy paste SerializeReference fields! ( 559a010 ) 2.0.0 (2020-08-16) Code Refactoring 🎨 refactoring typefield ( d574868 ) BREAKING CHANGES Changes the public API of TypeField and remove TypeFieldOptions 1.0.2 (2020-08-15) Bug Fixes 🐛 fixing can't set null type on SerializableType ( afdb027 ), closes #46 1.0.1 (2020-08-15) Bug Fixes 🐛 fixes error in demo ( 47e7470 ), closes #48 1.0.0 (2020-07-30) Code Refactoring 🎨 ShowValueType -> ShowSerializeReference ( 0feed58 ) BREAKING CHANGES ShowValueType is now renamed as ShowSerializeReference. Fixes #37 1.0.0-preview.1 (2020-07-29) Code Refactoring 🎨 ShowValueType -> ShowSerializeReference ( 0feed58 ) BREAKING CHANGES ShowValueType is now renamed as ShowSerializeReference. Fixes #37"
  },
  "index.html": {
    "href": "index.html",
    "title": "Serially | Serially",
    "keywords": "Serially Extends the Unity Editor with: ShowSerializeReference Adds an inspector to SerializeReference fields. SerializableType Serialize a System.Type . Installation This project can be installed as a UPM package on OpenUPM or npmjs . Alternatively, you can install this directly as either a tarball or unity asset package from the latest release ."
  },
  "license/LICENSE.html": {
    "href": "license/LICENSE.html",
    "title": "| Serially",
    "keywords": "MIT License Copyright (c) 2020 CareBoo Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions: The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software. THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE."
  },
  "license/Third Party Notices.html": {
    "href": "license/Third Party Notices.html",
    "title": "| Serially",
    "keywords": "This package contains third-party software components governed by the license(s) indicated below:"
  },
  "manual/SerializableType.html": {
    "href": "manual/SerializableType.html",
    "title": "SerializableType | Serially",
    "keywords": "SerializableType SerializableType can be used to Serialize a System.Type reference. The UI is very similar to the ShowSerializeReference attribute. Using a TypeFilter attribute, you can filter the shown types by a base type, or a custom filter delegate. The delegate name given to TypeFilter must refer to a delegate of type Func<IEnumerable<Type>, IEnumerable<Type>> . using CareBoo.Serially; public interface IPet {} public class Cat : IPet {} public class Dog : IPet {} public class MyBehavior : MonoBehaviour { [TypeFilter(derivedFrom: typeof(IPet))] // only show types derived from IPet public SerializableType SomePetType; public IEnumerable<Type> MyCustomFilter(IEnumerable<Type> type) { var acceptedTypes = new[] { typeof(int), SomePetType.Type }; return acceptedTypes.Contains(type); } [TypeFilter(nameof(MyCustomFilter))] // must be a Func<IEnumerable<Type>, IEnumerable<Type>> public SerializableType SelectedSomePetTypeOrInt; } Selecting Types Similar to the ShowSerializeReference attribute, clicking the circle button at the right edge of the label opens up an editor window with a list of types. Double click a type in the list to select it."
  },
  "manual/ShowSerializeReference.html": {
    "href": "manual/ShowSerializeReference.html",
    "title": "ShowSerializeReference | Serially",
    "keywords": "ShowSerializeReference Use the ShowSerializeReferenceAttribute to show an inspector field next to the SerializeReference field. The inspector field can be used to inject a new Serializable value into the SerializeReference field. using CareBoo.Serially; public class MyBehavior : MonoBehaviour { [SerializeReference] [ShowSerializeReference] public IPet MyCurrentPet; // The field shown in the image above. } public interface IPet { string Name { get; set; } string Noise { get;} } [ProvideSourceInfo, Serializable] public class Cat : IPet { public string Name; public bool IsPurring; string IPet.Name { get => Name; set => Name = value; } string IPet.Noise => \"Meow\"; } Selecting a New Value Clicking the circle button next to the type-name label opens up an editor window with a list of injectable types. Double click a type out of that list to inject a new instance of that type into the SerializeReference field. Note To instantiate the type, it must have a parameterless constructor ( new() ). If it doesn't, an error will show in the console."
  }
}