name: Unity Tests

on:
  push:
    branches:
      - main
  pull_request:
    paths:
      - "Runtime/**.cs"
      - "Runtime/**.asmdef"
      - "Runtime/**.dll"
      - "Runtime/**/Plugins/**"
      - "Editor/**.cs"
      - "Editor/**.asmdef"
      - "Tests/**.cs"
      - "Tests/**.asmdef"
      - "**/packages-lock.json"
  workflow_dispatch:

env:
  UNITY_LICENSE_2019: ${{ secrets.UNITY_LICENSE_2019 }}
  UNITY_LICENSE_2020: ${{ secrets.UNITY_LICENSE_2020 }}
  UNITY_LICENSE_2021: ${{ secrets.UNITY_LICENSE_2020 }}

jobs:
  testAllModes:
    name: Test on version ${{ matrix.unityVersion }}
    runs-on: ubuntu-latest

    strategy:
      fail-fast: false
      matrix:
        projectPath:
          - Serially.Package
        unityVersion:
          - 2019.4.37f1
          - 2020.3.33f1
          - 2021.1.28f1
          - 2021.2.19f1
          - 2021.3.1f1

    steps:
      - uses: actions/checkout@v2
        with:
          lfs: true

      - name: Set Unity License
        env:
          UNITY_VERSION: ${{ matrix.unityVersion }}
        run: |
          eval "license=\$UNITY_LICENSE_${UNITY_VERSION:0:4}"
          echo 'UNITY_LICENSE<<EOF' >> $GITHUB_ENV
          echo "$license" >> $GITHUB_ENV
          echo 'EOF' >> $GITHUB_ENV

      - uses: actions/cache@v2.1.1
        with:
          path: ${{ matrix.projectPath }}/Library
          key: Library-${{ matrix.unityVersion }}
          restore-keys: |
            Library-

      - uses: game-ci/unity-test-runner@v2
        id: tests
        with:
          projectPath: ${{ matrix.projectPath }}
          unityVersion: ${{ matrix.unityVersion }}
          artifactsPath: TestResults
          githubToken: ${{ secrets.GITHUB_TOKEN }}
          checkName: Test Results ${{ matrix.unityVersion }}
          customParameters: -enableCodeCoverage -coverageOptions generateAdditionalMetrics;enableCyclomaticComplexity;assemblyFilters:+CareBoo*,-CareBoo*.Tests,-CareBoo*.Samples.*

      - name: Upload Test Results Artifacts
        uses: actions/upload-artifact@v1
        with:
          name: ${{ matrix.unityVersion }} Test results
          path: ${{ steps.tests.outputs.artifactsPath }}

      - name: Upload Code Coverage Artifacts
        uses: actions/upload-artifact@v1
        with:
          name: ${{ matrix.unityVersion }} Code Coverage
          path: ${{ matrix.projectPath }}/CodeCoverage

      - name: Upload PlayMode Test Coverage Report
        uses: codecov/codecov-action@v1
        with:
          flags: unittests
          file: ${{ matrix.projectPath }}/CodeCoverage/Serially.Package-opencov/PlayMode/TestCoverageResults_0000.xml

      - name: Upload EditMode Test Coverage Report
        uses: codecov/codecov-action@v1
        with:
          flags: unittests
          file: ${{ matrix.projectPath }}/CodeCoverage/Serially.Package-opencov/EditMode/TestCoverageResults_0000.xml
