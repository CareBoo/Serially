name: Create Release

on:
  push:
    branches:
      - main
      - pre
      - exp
      - "[0-9]+.[0-9]+.[0-9]+"
      - "[0-9]+.[0-9]+.x"
      - "[0-9]+.x.x"

jobs:
  release:
    name: Release
    runs-on: ubuntu-latest
    outputs:
      published: ${{ steps.semantic.outputs.new_release_published }}
      version: ${{ steps.semantic.outputs.new_release_version }}
      major_minor: ${{ steps.semantic.outputs.new_release_major_version }}.${{ steps.semantic.outputs.new_release_minor_version }}
    steps:
      - uses: actions/checkout@v2
        with:
          lfs: true

      - name: Semantic Release
        id: semantic
        uses: cycjimmy/semantic-release-action@v2
        with:
          extra_plugins: |
            @semantic-release/changelog
            @semantic-release/git
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
          NPM_CONFIG_REGISTRY: "https://registry.npmjs.org/"

  buildPackage:
    name: Build unitypackage
    runs-on: ubuntu-latest
    needs: release
    if: needs.release.outputs.published == 'true'
    steps:
      - uses: actions/checkout@v2
        with:
          ref: ${{ github.ref }}
          lfs: true

      - uses: actions/cache@v2
        with:
          path: Serially.AssetStore/Library
          key: Library-build_unitypackage-Serially.AssetStore-StandaloneLinux64
          restore-keys: |
            Library-build_unitypackage-Serially.AssetStore-

      - name: Package unitypackage
        uses: game-ci/unity-builder@v2
        env:
          UNITY_LICENSE: ${{ secrets.UNITY_LICENSE_2020 }}
        with:
          targetPlatform: StandaloneLinux64
          projectPath: Serially.AssetStore
          buildMethod: UnityPackage.Build
          versioning: None
          allowDirtyBuild: true

      - name: Move unitypackage to dist folder
        run: |
          mkdir dist
          mv Serially.AssetStore/Serially.unitypackage dist/Serially-${{ needs.release.outputs.version }}.unitypackage

      - name: Upload dist
        uses: actions/upload-artifact@v2
        with:
          name: dist
          path: dist

      - name: Upload unitypackage to GitHub release
        uses: svenstaro/upload-release-action@2.2.1
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: dist/Serially-${{ needs.release.outputs.version }}.unitypackage
          tag: v${{ needs.release.outputs.version }}

  buildDocs:
    name: Build Docs
    runs-on: ubuntu-latest
    needs: release
    if: needs.release.outputs.published == 'true'
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          ref: ${{ github.ref }}
          lfs: true

      - name: Build Docs
        uses: nikeee/docfx-action@v1.0.0
        with:
          args: .docfx/docfx.json

      - name: Deploy Docs
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: _site
          destination_dir: ${{ needs.release.outputs.major_minor }}
